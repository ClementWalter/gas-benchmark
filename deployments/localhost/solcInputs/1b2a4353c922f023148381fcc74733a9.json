{
  "language": "Solidity",
  "sources": {
    "contracts/Events.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Events {\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool indexed approved\n    );\n\n    function emptyFunction(address, address, uint256) public {\n    }\n\n    function emitTransfer(address from, address to, uint256 tokenId) public {\n        emit Transfer(from, to, tokenId);\n    }\n\n    function emitApproval(address owner, address approved, uint256 tokenId) public {\n        emit Approval(owner, approved, tokenId);\n    }\n\n    function emitApprovalForAll(address owner, address operator, bool approved) public {\n        emit ApprovalForAll(owner, operator, approved);\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 2000
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}